Problema do Caixeiro Viajante (PCV) com Algoritmo Genético


Utilize conjunto de cidades com coordenadas representadas por coordenadas (x, y) em um plano cartesiano.
 O objetivo é encontrar a rota mais curta que visite todas as cidades exatamente uma vez e retorne à cidade de origem.: 


Cidade A: (0, 0)
Cidade B: (2, 4)
Cidade C: (5, 2)
Cidade D: (7, 7)
Cidade E: (1, 6)


Implemente uma função de aptidão (fitness) que calcule o comprimento total da rota. A aptidão deve ser minimizada, ou seja, menor comprimento de rota é melhor.

Gere uma população inicial de possíveis soluções (rotas) de caixeiro viajante. Cada solução é uma permutação das cidades.

Implemente um algoritmo genético que evolua a população ao longo de várias gerações. O algoritmo deve incluir seleção, crossover (cruzamento) e mutação.

Execute o algoritmo genético por um número fixo de gerações e registre o melhor indivíduo (menor comprimento de rota) encontrado ao longo do processo.

Apresente os resultados, incluindo a melhor rota encontrada e seu comprimento.

Desafios adicionais:

Experimente diferentes tamanhos de população, taxas de crossover e taxas de mutação para ver como esses parâmetros afetam o desempenho do algoritmo.

Compare os resultados obtidos com diferentes configurações do algoritmo genético e tente melhorar o desempenho ajustando os parâmetros.

Tente resolver o PCV com um conjunto maior de cidades e observe como o algoritmo genético se comporta.